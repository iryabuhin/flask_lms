version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    environment:
      FLASK_ENV: "production"
      FLASK_DEBUG: "False"
      FLASK_PORT: 5000
    env_file:
      - .env
    volumes:
      - appdata:/var/www
    depends_on:
      - redis
    networks:
      - frontend
      - backend

  webserver:
    build: nginx
    container_name: nginx
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redisdata:/data/redis
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
    - "6379:6379"
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  redisdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local